<?php
class ControllerWorkplaceCategoriesInfo extends Controller
{

  //----------------------------------------------------------------------------
  // Index method
  //----------------------------------------------------------------------------

  public function index()
  {


    // Test for Category GUID parameter exists
    if (($this->request->Is_GET_Parameter_GUID('guid') === false)){

      //----------------------------------------------------------------------
      // ERROR: Category GUID parameter not found
      //----------------------------------------------------------------------


    }
    else
    {

      //------------------------------------------------------------------------
      // Category GUID parameter found, continue processing
      //------------------------------------------------------------------------

      // Load messages
      $this->messages->Load($this->data, 'workplace', 'categories_info', 'index', $this->language->Get_Language_Code());

      // Get Category guid
      $this->data['category_guid'] =  $this->request->Get_GET_Parameter_As_GUID('guid');

      // Load data models
      $this->load->model('categories/categories');

      // Get category information
      $this->data['category'] = $this->model_categories_categories->Get_Category_Information( $this->data['category_guid'], $this->language->Get_Language_Code());

      // Get category tree
      if( $this->data['category']['guid']!= '00000000000000000000000000000000')
      {

        $this->data['tree_categories'] = [];

        $parent_guid =  $this->data['category']['parent_guid'];
        $category =  $this->data['category'];

        do
        {

          $category = $this->model_categories_categories->Get_Category_Information( $parent_guid, $this->language->Get_Language_Code());

          if( $category['valid'] === false )
          {

            break;

          }
          else
          {

            array_push( $this->data['tree_categories'],array(
              'guid' =>$category['parent_guid'],
              'name' => $category[ 'name' ],
              'href' => $this->url->link( 'workplace/categories/info', 'guid=' . $category['guid'], 'SSL' )
            ));

            $parent_guid = $category['parent_guid'];

          }

        } while ( $category['parent_guid'] != '00000000000000000000000000000000');

        array_push( $this->data['tree_categories'],array(
          'guid' =>'00000000000000000000000000000000',
          'name' => $this->data['workplace_categories_info_category_tree_main_category_text'],
          'href' => $this->url->link( 'workplace/categories/info', 'guid=00000000000000000000000000000000', 'SSL' )
        ));

        }

      // Get category subcategories
      $subcategories = $this->model_categories_categories->Get_Subcategories( $this->data['category_guid'], $this->language->Get_Language_Code());

      if ( count( $subcategories ) > 0 )
      {

        // Process group properties
        foreach ( $subcategories as $subcategory )
        {

          // Set subcategory data
          $this->data['subcategories'][] = array(
            'element_href' => 'subcategory' . $subcategory['guid'],
            'guid' => $subcategory['guid'],
            'status' => $subcategory['status'],
            'href' =>  $this->url->link( 'workplace/categories/info', 'guid=' . $subcategory[ 'guid' ], 'SSL' ), 
            'name' => $subcategory['name'],
            'description' => $subcategory['description']
          );

        }

      }

      // Set links
      $this->data['add_button_href'] = $this->url->link('workplace/categories/add', 'category_guid=' .  $this->data['category_guid'], 'SSL');
      $this->data['edit_button_href'] = $this->url->link('workplace/categories/edit', 'category_guid=' .  $this->data['category_guid'], 'SSL');

    }

    //------------------------------------------------------------------------
    // Render page
    //------------------------------------------------------------------------

    // Set document categories
    $this->response->setTitle($this->messages->Get_Message('document_title_text'));
    $this->response->setDescription($this->messages->Get_Message('document_description_text'));
    $this->response->setKeywords('');
    $this->response->setRobots('index, follow');

    // Set page configuration
    $this->children = array(
      'common/footer',
      'workplace/menu',
      'common/header'
    );

  }

}

//------------------------------------------------------------------------------
// End of file
//------------------------------------------------------------------------------
?>