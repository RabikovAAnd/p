<?php
class ModelCatalogCatalog extends Model
{

  //----------------------------------------------------------------------------
  // Get teaser catagories
  //----------------------------------------------------------------------------
  
  public function Get_Teaser_Categories( $category_guid = '' )
  {

    // Compose SQL query
    $sql = 
      "SELECT " .
        "`category`.`guid` AS guid " .
      "FROM " .
        "`category` " .
      "WHERE " .
//        "`category`.`parent_category_guid`='" . $category_guid . "' AND " .
        "`category`.`active`=1 AND " .
        "`category`.`teaser`=1";

    // Execute query
    $query = $this->db->query( $sql );

    // Return data
    return( $query->rows );

  }

  //----------------------------------------------------------------------------
  // Get category referenced by category id
  //----------------------------------------------------------------------------

  public function Get_Category( $category_guid = '' )
  {

    // Compose SQL query
    $sql = 
      "SELECT DISTINCT " .
        "`category`.`guid`, " . 
        "`category`.`image_type`, " . 
        "`category`.`image_data`, " .
        "`category_description`.`name`, " .
        "`category_description`.`description_short`, " .
        "`category_description`.`description` " .
      "FROM " .
        "`category` " .
      "LEFT JOIN " .
        "`category_description` ". 
      "ON " .
        "`category`.`guid`=`category_description`.`category_guid` " .
      "WHERE " . 
        "`category`.`guid`='" . $category_guid . "' AND " . 
        "`category_description`.`language_code`='EN' AND " .
        "`category`.`active`=1 " .
      "LIMIT 1";

    // Execute quiery
    $query = $this->db->query( $sql );

    // Test for no query result  
    if ( !isset( $query->row ) )
    {

      //------------------------------------------------------------------------
      // ERROR: SQL query processing failed
      //------------------------------------------------------------------------

      // Set default values
      $result = array(
        'guid' => '',
        'image_type' => '',
        'image_data' => '',
        'name' => '',
        'description_short' => '',
        'description' => ''
      );

    }
    else
    {

      //------------------------------------------------------------------------
      // SQL query processed
      //------------------------------------------------------------------------

      // Assugn query result
      $result = array(
        'guid' => $query->row[ 0 ],
        'image_type' => $query->row[ 1 ],
        'image_data' => $query->row[ 2 ] !== null ? $query->row[ 2 ] : '',
        'name' => $query->row[ 3 ],
        'description_short' => $query->row[ 4 ],
        'description' => $query->row[ 5 ]
      );

    }

    // Return data
    return( $result );

  }

  //----------------------------------------------------------------------------
  // Get count of subcategories
  //----------------------------------------------------------------------------

  public function Get_Subcategories_Count( $category_guid = '' ) : int
  {

    // Compose SQL query
    $sql = 
      "SELECT " .
        "COUNT(*) " .
      "FROM " .
        "`category` " .
      "WHERE " .
        "`category`.`parent_guid`='" . $category_guid . "' AND " .
        "`category`.`active`=1";

    // Execute query
    $query = $this->db->query( $sql );

    // Test for no query result  
    if ( !isset( $query->row ) )
    {

      //------------------------------------------------------------------------
      // ERROR: SQL query processing failed
      //------------------------------------------------------------------------

      // Set count of subcategories to 0
      $count = 0;

    }
    else
    {

      //------------------------------------------------------------------------
      // SQL query processed
      //------------------------------------------------------------------------

      // Get count of the subcategories
      $count = $query->row[ 0 ];

    }
    
    // Return data
    return( $count );

  }

  //----------------------------------------------------------------------------
  // Get subcategories identifiers
  //----------------------------------------------------------------------------

  public function Get_Subcategories( $category_guid = '' )
  {

    // Compose SQL query
    $sql = 
      "SELECT " .
        "`category`.`guid` AS guid " .
      "FROM " .
        "`category` " .
      "WHERE " .
        "`category`.`parent_guid`='" . $category_guid . "' AND " .
        "`category`.`active`=1 ";

    // Execute query
    $query = $this->db->query( $sql );

    // Return data
    return( $query->rows );

  }

  //----------------------------------------------------------------------------
/*
  public function getCategoryFilters($category_id)
  {
    $implode = array();

    $query = $this->db->query( "SELECT filter_id FROM category_filter WHERE category_id = '" . (int)$category_id . "'" );

    foreach ($query->rows as $result) {
      $implode[] = (int)$result['filter_id'];
    }


    $filter_group_data = array();

    if ($implode) {
      $filter_group_query = $this->db->query("SELECT DISTINCT f.filter_group_id, fgd.name, fg.sort_order FROM filter f LEFT JOIN filter_group fg ON (f.filter_group_id = fg.filter_group_id) LEFT JOIN filter_group_description fgd ON (fg.filter_group_id = fgd.filter_group_id) WHERE f.filter_id IN (" . implode(',', $implode) . ") AND fgd.language_id = '0' GROUP BY f.filter_group_id ORDER BY fg.sort_order, LCASE(fgd.name)");

      foreach ($filter_group_query->rows as $filter_group) {
        $filter_data = array();

        $filter_query = $this->db->query("SELECT DISTINCT f.filter_id, fd.name FROM filter f LEFT JOIN filter_description fd ON (f.filter_id = fd.filter_id) WHERE f.filter_id IN (" . implode(',', $implode) . ") AND f.filter_group_id = '" . (int)$filter_group['filter_group_id'] . "' AND fd.language_id = '0' ORDER BY f.sort_order, LCASE(fd.name)");

        foreach ($filter_query->rows as $filter) {
          $filter_data[] = array(
            'filter_id' => $filter['filter_id'],
            'name'      => $filter['name']
          );
        }

        if ($filter_data) {
          $filter_group_data[] = array(
            'filter_group_id' => $filter_group['filter_group_id'],
            'name'            => $filter_group['name'],
            'filter'          => $filter_data
          );
        }
      }
    }

    return $filter_group_data;
  }
*/
}
//------------------------------------------------------------------------------
// End of file
//------------------------------------------------------------------------------
?>